&НаКлиенте
Процедура Меню(Команда)
	Значение = ПроверкаМеню();
	ПараметрыЛогин = Новый Структура("Логин",Логин);
	Если Значение = 0 Тогда
		ОткрытьФорму("ОбщаяФорма.МенюСотрудника",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	Иначе
		ОткрытьФорму("ОбщаяФорма.МенюАдмина",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПроверкаМеню()
	Пользователь = Справочники.Сотрудник.НайтиПоНаименованию(Логин).Роль;
	Если Пользователь = Ложь Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Выход(Команда)
	Перем ЗакрытиеОкна;
	Попытка
	 ЗакрытиеОкон = ПолучитьОкна();
	Для Каждого Элемент Из ЗакрытиеОкон Цикл
    	Если Не Элемент.Основное Тогда
        	Форма = Элемент.ПолучитьСодержимое();
        	Форма.Закрыть();
    	КонецЕсли;
	КонецЦикла;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФИОСотрудника = Параметры.ФИО;
	Логин = Параметры.Логин;	
КонецПроцедуры


&НаСервере
Процедура ПоискНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОГражданине.ФИО КАК ФИО,
	               |	ПерсональныеДанные.Пол КАК Пол,
	               |	ПерсональныеДанные.Возраст КАК Возраст,
	               |	ПерсональныеДанные.БрачныйСтатус КАК БрачныйСтатус,
	               |	Сотрудник.Логин КАК Логин,
	               |	Сотрудник.Роль КАК Роль,
	               |	СоциальныеДанные.СоциальныйСтатус КАК СоциальныйСтатус,
	               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньГрамотности КАК УровеньГрамотности,
	               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньОбразования КАК УровеньОбразования,
	               |	СоциальныеДанные.Код_СправочникаОбразование.ОбразовательныеУчреждения КАК ОбразовательныеУчреждения,
	               |	СоциальныеДанные.Код_СправочникаРабота.СтатусЭкономическойАктичности КАК СтатусЭкономическойАктичности,
	               |	СоциальныеДанные.Код_СправочникаРабота.РодЗанятий КАК РодЗанятий,
	               |	СоциальныеДанные.Код_СправочникаРабота.Работа КАК Работа,
	               |	СоциальныеДанные.Код_СправочникаРабота.СтатусВозможнойРаботоспособности КАК СтатусВозможнойРаботоспособности,
	               |	ДанныеОСтране.СтранаРождения КАК СтранаРождения,
	               |	ДанныеОСтране.ДатаМиграции КАК ДатаМиграции,
	               |	ДанныеОСтране.Гражданство КАК Гражданство,
	               |	ДанныеОСемье.ЧленСемьи КАК ЧленСемьи,
	               |	ДанныеОСемье.СтатусЧленаСемьи КАК СтатусЧленаСемьи,
	               |	ДанныеОСемье.Отношение КАК Отношение,
	               |	ДанныеОСемье.СтепеньРодства КАК СтепеньРодства,
	               |	ДанныеОНациональность.Национальность КАК Национальность,
	               |	ДанныеОНациональность.ПервыйЯзык КАК ПервыйЯзык,
	               |	ДанныеОНациональность.Религия КАК Религия,
	               |	ДанныеОНациональность.ДругиеЯзыки КАК ДругиеЯзыки,
	               |	ДанныеОбАдресе.Область КАК Область,
	               |	ДанныеОбАдресе.Регион КАК Регион,
	               |	ДанныеОбАдресе.НаселенныйПункт КАК НаселенныйПункт,
	               |	ДанныеОбАдресе.Улица КАК Улица,
	               |	ДанныеОбАдресе.Дом КАК Дом,
	               |	ВопросыДляГражданина.Вопросы КАК Вопросы,
	               |	ВопросыДляГражданина.Ответы КАК Ответы,
	               |	ДанныеОбАдресе.Строение КАК Строение
	               |ИЗ
	               |	Справочник.ДанныеОГражданине КАК ДанныеОГражданине
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе
	               |		ПО ДанныеОГражданине.Код_СправочникАдрес = ДанныеОбАдресе.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудник КАК Сотрудник
	               |		ПО ДанныеОГражданине.Код_СправочникаСотрудник = Сотрудник.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыДляГражданина КАК ВопросыДляГражданина
	               |		ПО ДанныеОГражданине.Код_СправочникаВопросы = ВопросыДляГражданина.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПерсональныеДанные КАК ПерсональныеДанные
	               |		ПО ДанныеОГражданине.Код_СправочникаПерсональныеДанные = ПерсональныеДанные.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОНациональность КАК ДанныеОНациональность
	               |		ПО ДанныеОГражданине.Код_СправочникаНациональности = ДанныеОНациональность.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСемье КАК ДанныеОСемье
	               |		ПО ДанныеОГражданине.Код_СправочникаДанныеСемьи = ДанныеОСемье.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСтране КАК ДанныеОСтране
	               |		ПО ДанныеОГражданине.Код_СправочнниаДанныеОСтране = ДанныеОСтране.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоциальныеДанные КАК СоциальныеДанные
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОРаботе КАК ДанныеОРаботе
	               |			ПО СоциальныеДанные.Код_СправочникаРабота = ДанныеОРаботе.Ссылка
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеООбразовании КАК ДанныеООбразовании
	               |			ПО СоциальныеДанные.Код_СправочникаОбразование = ДанныеООбразовании.Ссылка
	               |		ПО ДанныеОГражданине.Код_СправочникаСоциальныеДанные = СоциальныеДанные.Ссылка
	               |ГДЕ
	               |	ДанныеОГражданине.ФИО = &ПоискФИО";
	Запрос.УстановитьПараметр("ПоискФИО",ПоискФИО);
	ВыборкаТаблицы = Запрос.Выполнить().Выгрузить();
	ТаблицаЗначений.Загрузить(ВыборкаТаблицы);
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ВыборкаТаблицы, "ТаблицаЗначений", "Таблица1");
	ДокументПоиск = Документы.ПоискГраждан.СоздатьДокумент();
	ДокументПоиск.Дата = ТекущаяДата();
	ДокументПоиск.ИмяДокумента = "Поиск по " + ПоискФИО;
	ДокументПоиск.Искал = Логин;
	ДокументПоиск.ПоискПо = ПоискФИО;
	ДокументПоиск.Записать();
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТабВКоде, ТабРеквизит, ТабНаФорме)
	Попытка
	НовыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из ТабВКоде.Колонки Цикл
         НовыеРеквизиты.Добавить(
            Новый РеквизитФормы(
                Колонка.Имя, Колонка.ТипЗначения,
                ТабРеквизит));
    КонецЦикла;
    ИзменитьРеквизиты(НовыеРеквизиты);
    Для Каждого Колонка Из ТабВКоде.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(
            ТабРеквизит + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ТабНаФорме]);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = ТабРеквизит + "." + Колонка.Имя;
    КонецЦикла;
    ЗначениеВРеквизитФормы(ТабВКоде, ТабРеквизит);
Исключение
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура Поиск(Команда)
	Если ПоискФИО = "" Тогда
		Сообщить("Выберете сначала ФИО для поиска");
	Иначе
		ПоискНаСервере();
	КонецЕсли;
КонецПроцедуры

