
&НаКлиенте
Процедура Меню(Команда)
	Значение = ПроверкаМеню();
	ПараметрыЛогин = Новый Структура("Логин",Логин);
	Если Значение = 0 Тогда
		ОткрытьФорму("ОбщаяФорма.МенюСотрудника",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	Иначе
		ОткрытьФорму("ОбщаяФорма.МенюАдмина",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверкаМеню()
	Пользователь = Справочники.Сотрудник.НайтиПоНаименованию(Логин).Роль;
	Если Пользователь = Ложь Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Выход(Команда)
	Перем ЗакрытиеОкна;
	Попытка
	 ЗакрытиеОкон = ПолучитьОкна();
	Для Каждого Элемент Из ЗакрытиеОкон Цикл
    	Если Не Элемент.Основное Тогда
        	Форма = Элемент.ПолучитьСодержимое();
        	Форма.Закрыть();
    	КонецЕсли;
	КонецЦикла;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НайтиСовпадение(Команда)
	НайтиИЗаполнениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура НайтиИЗаполнениеНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	" + СтрЗаменить(ВыборТаблицы,"Справочник.","") + ".Наименование КАК Наименование,
	               |	КОЛИЧЕСТВО(" + СтрЗаменить(ВыборТаблицы,"Справочник.","") + ".Ссылка) КАК КоличествоСовпадений
	               |ИЗ
	               |	" + ВыборТаблицы + " КАК " + СтрЗаменить(ВыборТаблицы,"Справочник.","") + "
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	" + СтрЗаменить(ВыборТаблицы,"Справочник.","") + ".Наименование";
	Результат = Запрос.Выполнить().Выгрузить();
	ТаблицаЗначений.Загрузить(Результат);
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(Результат, "ТаблицаЗначений", "Таблица1");
	ДокументСовпадение = Документы.НайтиСовпадение.СоздатьДокумент();
	ДокументСовпадение.Дата = ТекущаяДата();
	ДокументСовпадение.ИмяДокумента = "Поиск совпадения от " + Логин;
	ДокументСовпадение.Искал = Логин;
	ДокументСовпадение.Записать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФИОГражданина = Параметры.ФИО;
	Логин = Параметры.Логин;
	Для Каждого Справочник Из Метаданные.Справочники Цикл
	Элементы.ВыборТаблицы.СписокВыбора.Добавить(Справочник.ПолноеИмя());
	КонецЦикла;
	ВыборТаблицы = Элементы.ВыборТаблицы.СписокВыбора[0].Значение;
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТабВКоде, ТабРеквизит, ТабНаФорме)
	Попытка
	НовыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из ТабВКоде.Колонки Цикл
         НовыеРеквизиты.Добавить(
            Новый РеквизитФормы(
                Колонка.Имя, Колонка.ТипЗначения,
                ТабРеквизит));
    КонецЦикла;
    ИзменитьРеквизиты(НовыеРеквизиты);
    Для Каждого Колонка Из ТабВКоде.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(
            ТабРеквизит + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ТабНаФорме]);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = ТабРеквизит + "." + Колонка.Имя;
    КонецЦикла;
    ЗначениеВРеквизитФормы(ТабВКоде, ТабРеквизит);
Исключение
	КонецПопытки;
КонецПроцедуры
