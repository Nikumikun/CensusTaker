&НаКлиенте
Процедура Меню(Команда)
	Значение = ПроверкаМеню();
	ПараметрыЛогин = Новый Структура("Логин",Логин);
	Если Значение = 0 Тогда
		ОткрытьФорму("ОбщаяФорма.МенюСотрудника",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	Иначе
		ОткрытьФорму("ОбщаяФорма.МенюАдмина",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Подсчет(Команда)
	Если Фильтр = "" И ИмяФильтра = "" Тогда
		Сообщить("Выберете фильтр поиска и имя фильтра");
	ИначеЕсли Фильтр <> "" И ИмяФильтра = "" Тогда
		Сообщить("Выберете имя фильтра");
	ИначеЕсли Фильтр <> "" И ИмяФильтра <> "" Тогда
		ПодсчетГраждан();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПодсчетГраждан()
	Перем ИмяСправочника;
	Если Фильтр = "Область" ИЛИ Фильтр = "Регион" ИЛИ Фильтр = "НаселенныйПункт" ИЛИ Фильтр = "Улица" ИЛИ Фильтр = "Дом"
		ИЛИ Фильтр = "Строение" Тогда
		ИмяСправочника = "ДанныеОбАдресе";
	ИначеЕсли Фильтр = "Пол" ИЛИ Фильтр = "Возраст" ИЛИ Фильтр = "БрачныйСтатус" Тогда
		ИмяСправочника = "ПерсональныеДанные";
	ИначеЕсли Фильтр = "Национальность" ИЛИ Фильтр = "ПервыйЯзык" ИЛИ Фильтр = "ДругиеЯзыки" ИЛИ Фильтр = "Религия" Тогда
		ИмяСправочника = "ДанныеОНациональность";
	ИначеЕсли Фильтр = "СтранаРождения" ИЛИ Фильтр = "ДатаМиграции" ИЛИ Фильтр = "Гражданство" Тогда
		ИмяСправочника = "ДанныеОСтране";
	ИначеЕсли Фильтр = "СтатусЭкономическойАктичности" ИЛИ Фильтр = "РодЗанятий" ИЛИ Фильтр = "Работа" 
		ИЛИ Фильтр = "СтатусВозможнойРаботоспособности" Тогда
		ИмяСправочника = "СоциальныеДанные.Код_СправочникаРабота"
	ИначеЕсли Фильтр = "УровеньГрамотности" ИЛИ Фильтр = "УровеньОбразования" ИЛИ Фильтр = "ОбразовательныеУчреждения" Тогда
		ИмяСправочника = "СоциальныеДанные.Код_СправочникаОбразование";
	ИначеЕсли Фильтр = "СоциальныйСтатус" Тогда
		ИмяСправочника = "СоциальныеДанные"; 
		КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОГражданине.ФИО КАК ФИО,
	               |	ПерсональныеДанные.Пол КАК Пол,
	               |	ПерсональныеДанные.Возраст КАК Возраст,
	               |	ПерсональныеДанные.БрачныйСтатус КАК БрачныйСтатус,
	               |	Сотрудник.Логин КАК Логин,
	               |	Сотрудник.Роль КАК Роль,
	               |	СоциальныеДанные.СоциальныйСтатус КАК СоциальныйСтатус,
	               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньГрамотности КАК УровеньГрамотности,
	               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньОбразования КАК УровеньОбразования,
	               |	СоциальныеДанные.Код_СправочникаОбразование.ОбразовательныеУчреждения КАК ОбразовательныеУчреждения,
	               |	СоциальныеДанные.Код_СправочникаРабота.СтатусЭкономическойАктичности КАК СтатусЭкономическойАктичности,
	               |	СоциальныеДанные.Код_СправочникаРабота.РодЗанятий КАК РодЗанятий,
	               |	СоциальныеДанные.Код_СправочникаРабота.Работа КАК Работа,
	               |	СоциальныеДанные.Код_СправочникаРабота.СтатусВозможнойРаботоспособности КАК СтатусВозможнойРаботоспособности,
	               |	ДанныеОСтране.СтранаРождения КАК СтранаРождения,
	               |	ДанныеОСтране.ДатаМиграции КАК ДатаМиграции,
	               |	ДанныеОСтране.Гражданство КАК Гражданство,
	               |	ДанныеОСемье.ЧленСемьи КАК ЧленСемьи,
	               |	ДанныеОСемье.СтатусЧленаСемьи КАК СтатусЧленаСемьи,
	               |	ДанныеОСемье.Отношение КАК Отношение,
	               |	ДанныеОСемье.СтепеньРодства КАК СтепеньРодства,
	               |	ДанныеОНациональность.Национальность КАК Национальность,
	               |	ДанныеОНациональность.ПервыйЯзык КАК ПервыйЯзык,
	               |	ДанныеОНациональность.Религия КАК Религия,
	               |	ДанныеОНациональность.ДругиеЯзыки КАК ДругиеЯзыки,
	               |	ДанныеОбАдресе.Область КАК Область,
	               |	ДанныеОбАдресе.Регион КАК Регион,
	               |	ДанныеОбАдресе.НаселенныйПункт КАК НаселенныйПункт,
	               |	ДанныеОбАдресе.Улица КАК Улица,
	               |	ДанныеОбАдресе.Дом КАК Дом,
	               |	ВопросыДляГражданина.Вопросы КАК Вопросы,
	               |	ВопросыДляГражданина.Ответы КАК Ответы,
	               |	ДанныеОбАдресе.Строение КАК Строение
	               |ИЗ
	               |	Справочник.ДанныеОГражданине КАК ДанныеОГражданине
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе
	               |		ПО ДанныеОГражданине.Код_СправочникАдрес = ДанныеОбАдресе.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудник КАК Сотрудник
	               |		ПО ДанныеОГражданине.Код_СправочникаСотрудник = Сотрудник.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыДляГражданина КАК ВопросыДляГражданина
	               |		ПО ДанныеОГражданине.Код_СправочникаВопросы = ВопросыДляГражданина.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПерсональныеДанные КАК ПерсональныеДанные
	               |		ПО ДанныеОГражданине.Код_СправочникаПерсональныеДанные = ПерсональныеДанные.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОНациональность КАК ДанныеОНациональность
	               |		ПО ДанныеОГражданине.Код_СправочникаНациональности = ДанныеОНациональность.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСемье КАК ДанныеОСемье
	               |		ПО ДанныеОГражданине.Код_СправочникаДанныеСемьи = ДанныеОСемье.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСтране КАК ДанныеОСтране
	               |		ПО ДанныеОГражданине.Код_СправочнниаДанныеОСтране = ДанныеОСтране.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоциальныеДанные КАК СоциальныеДанные
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОРаботе КАК ДанныеОРаботе
	               |			ПО СоциальныеДанные.Код_СправочникаРабота = ДанныеОРаботе.Ссылка
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеООбразовании КАК ДанныеООбразовании
	               |			ПО СоциальныеДанные.Код_СправочникаОбразование = ДанныеООбразовании.Ссылка
	               |		ПО ДанныеОГражданине.Код_СправочникаСоциальныеДанные = СоциальныеДанные.Ссылка
	               |ГДЕ
	               |	"+ ИмяСправочника +"."+ Фильтр +" = &ЗначениеФильтра";
	Запрос.УстановитьПараметр("ЗначениеФильтра",ИмяФильтра);
	ВыборкаТаблицы = Запрос.Выполнить().Выгрузить();
	Результат = "Было найдено: " + ВыборкаТаблицы.количество() + " граждан";
	ДокументПодсчет = Документы.ПодсчетГраждан.СоздатьДокумент();
	ДокументПодсчет.ИмяДокумента = "Подсчитано по " + Фильтр + "." + ИмяФильтра;
	ДокументПодсчет.Дата = ТекущаяДата();
	ДокументПодсчет.Подсчитал = Логин;
	ДокументПодсчет.КоличествоПодсчитанных = ВыборкаТаблицы.Количество();
	ДокументПодсчет.Записать();
	
КонецФункции

&НаСервере
Функция ПроверкаМеню()
	Пользователь = Справочники.Сотрудник.НайтиПоНаименованию(Логин).Роль;
	Если Пользователь = Ложь Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Выход(Команда)
	Перем ЗакрытиеОкна;
	Попытка
	 ЗакрытиеОкон = ПолучитьОкна();
	Для Каждого Элемент Из ЗакрытиеОкон Цикл
    	Если Не Элемент.Основное Тогда
        	Форма = Элемент.ПолучитьСодержимое();
        	Форма.Закрыть();
    	КонецЕсли;
	КонецЦикла;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФИОСотрудника = Параметры.ФИО;
	Логин = Параметры.Логин;	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФильтры(Команда)
	Если Фильтр = Неопределено Тогда
		Сообщить("Выберете фильтр");
	Иначе
		ЗагрузитьФильтрыНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьФильтрыНаСервере()
	Если Фильтр = "Область" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеОбАдресе.Область КАК Область
		               |ИЗ
		               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
		Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Область"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Регион" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.Регион КАК Регион
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Регион"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "НаселенныйПункт" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.НаселенныйПункт КАК НаселенныйПункт
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("НаселенныйПункт"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Улица" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.Улица КАК Улица
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Улица"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Дом" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.Дом КАК Дом
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Дом"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Строение" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.Строение КАК Строение
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Строение"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Пол" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПерсональныеДанные.Пол КАК Пол
	               |ИЗ
	               |	Справочник.ПерсональныеДанные КАК ПерсональныеДанные";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Пол"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Возраст" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПерсональныеДанные.Возраст КАК Возраст
	               |ИЗ
	               |	Справочник.ПерсональныеДанные КАК ПерсональныеДанные";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Возраст"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "БрачныйСтатус" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПерсональныеДанные.БрачныйСтатус КАК БрачныйСтатус
	               |ИЗ
	               |	Справочник.ПерсональныеДанные КАК ПерсональныеДанные";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("БрачныйСтатус"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Национальность" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОНациональность.Национальность КАК Национальность
	               |ИЗ
	               |	Справочник.ДанныеОНациональность КАК ДанныеОНациональность";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Национальность"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "ПервыйЯзык" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОНациональность.ПервыйЯзык КАК ПервыйЯзык
	               |ИЗ
	               |	Справочник.ДанныеОНациональность КАК ДанныеОНациональность";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("ПервыйЯзык"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "ДругиеЯзыки" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОНациональность.ДругиеЯзыки КАК ДругиеЯзыки
	               |ИЗ
	               |	Справочник.ДанныеОНациональность КАК ДанныеОНациональность";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("ДругиеЯзыки"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Религия" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОНациональность.Религия КАК Религия
	               |ИЗ
	               |	Справочник.ДанныеОНациональность КАК ДанныеОНациональность";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Религия"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "СтранаРождения" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОСтране.СтранаРождения КАК СтранаРождения
	               |ИЗ
	               |	Справочник.ДанныеОСтране КАК ДанныеОСтране";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("СтранаРождения"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "ДатаМиграции" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОСтране.ДатаМиграции КАК ДатаМиграции
	               |ИЗ
	               |	Справочник.ДанныеОСтране КАК ДанныеОСтране";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("ДатаМиграции"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Гражданство" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОСтране.Гражданство КАК Гражданство
	               |ИЗ
	               |	Справочник.ДанныеОСтране КАК ДанныеОСтране";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Гражданство"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "СтатусЭкономическойАктивности" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОРаботе.СтатусЭкономическойАктичности КАК СтатусЭкономическойАктичности
	               |ИЗ
	               |	Справочник.ДанныеОРаботе КАК ДанныеОРаботе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("СтатусЭкономическойАктичности"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "РодЗанятий" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОРаботе.РодЗанятий КАК РодЗанятий
	               |ИЗ
	               |	Справочник.ДанныеОРаботе КАК ДанныеОРаботе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("РодЗанятий"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "Работа" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОРаботе.Работа КАК Работа
	               |ИЗ
	               |	Справочник.ДанныеОРаботе КАК ДанныеОРаботе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("Работа"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "СтатусВозможнойРаботоспособности" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОРаботе.СтатусВозможнойРаботоспособности КАК СтатусВозможнойРаботоспособности
	               |ИЗ
	               |	Справочник.ДанныеОРаботе КАК ДанныеОРаботе";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("СтатусВозможнойРаботоспособности"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "УровеньГрамотности" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеООбразовании.УровеньГрамотности КАК УровеньГрамотности
	               |ИЗ
	               |	Справочник.ДанныеООбразовании КАК ДанныеООбразовании";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("УровеньГрамотности"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "УровеньОбразования" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеООбразовании.УровеньОбразования КАК УровеньОбразования
	               |ИЗ
	               |	Справочник.ДанныеООбразовании КАК ДанныеООбразовании";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("УровеньОбразования"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "ОбразовательныеУчреждения" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеООбразовании.ОбразовательныеУчреждения КАК ОбразовательныеУчреждения
	               |ИЗ
	               |	Справочник.ДанныеООбразовании КАК ДанныеООбразовании";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("ОбразовательныеУчреждения"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	ИначеЕсли Фильтр = "СоциальныйСтатус" Тогда
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоциальныеДанные.СоциальныйСтатус КАК СоциальныйСтатус
	               |ИЗ
	               |	Справочник.СоциальныеДанные КАК СоциальныеДанные";
	Выборка = Запрос.Выполнить();
		Элементы.ИмяФильтра.СписокВыбора.ЗагрузитьЗначения(Выборка.Выгрузить().ВыгрузитьКолонку("СоциальныйСтатус"));
		ИмяФильтра = Элементы.ИмяФильтра.СписокВыбора[0].Значение;
	КонецЕсли;
КонецФункции




