&НаКлиенте
Процедура Выгрузить(Команда)
	Если ВыборОбласти = "" Тогда
		Сообщить("Не выбрана область");
	Иначе
		Выгрузка();
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Выгрузка()
		Запрос = Новый Запрос;
		Запрос1 = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеОГражданине.ФИО КАК ФИО,
		               |	ПерсональныеДанные.Пол КАК Пол,
		               |	ПерсональныеДанные.Возраст КАК Возраст,
		               |	ПерсональныеДанные.БрачныйСтатус КАК БрачныйСтатус,
		               |	Сотрудник.Логин КАК Логин,
		               |	Сотрудник.Пароль КАК Пароль,
		               |	Сотрудник.Роль КАК Роль,
		               |	СоциальныеДанные.СоциальныйСтатус КАК СоциальныйСтатус,
		               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньГрамотности КАК УровеньГрамотности,
		               |	СоциальныеДанные.Код_СправочникаОбразование.УровеньОбразования КАК УровеньОбразования,
		               |	СоциальныеДанные.Код_СправочникаОбразование.ОбразовательныеУчреждения КАК ОбразовательныеУчреждения,
		               |	СоциальныеДанные.Код_СправочникаРабота.СтатусЭкономическойАктичности КАК СтатусЭкономическойАктичности,
		               |	СоциальныеДанные.Код_СправочникаРабота.РодЗанятий КАК РодЗанятий,
		               |	СоциальныеДанные.Код_СправочникаРабота.Работа КАК Работа,
		               |	СоциальныеДанные.Код_СправочникаРабота.СтатусВозможнойРаботоспособности КАК СтатусВозможнойРаботоспособности,
		               |	ДанныеОСтране.СтранаРождения КАК СтранаРождения,
		               |	ДанныеОСтране.ДатаМиграции КАК ДатаМиграции,
		               |	ДанныеОСтране.Гражданство КАК Гражданство,
		               |	ДанныеОСемье.ЧленСемьи КАК ЧленСемьи,
		               |	ДанныеОСемье.СтатусЧленаСемьи КАК СтатусЧленаСемьи,
		               |	ДанныеОСемье.Отношение КАК Отношение,
		               |	ДанныеОСемье.СтепеньРодства КАК СтепеньРодства,
		               |	ДанныеОНациональность.Национальность КАК Национальность,
		               |	ДанныеОНациональность.ПервыйЯзык КАК ПервыйЯзык,
		               |	ДанныеОНациональность.Религия КАК Религия,
		               |	ДанныеОНациональность.ДругиеЯзыки КАК ДругиеЯзыки,
		               |	ДанныеОбАдресе.Область КАК Область,
		               |	ДанныеОбАдресе.Регион КАК Регион,
		               |	ДанныеОбАдресе.НаселенныйПункт КАК НаселенныйПункт,
		               |	ДанныеОбАдресе.Улица КАК Улица,
		               |	ДанныеОбАдресе.Дом КАК Дом,
		               |	ВопросыДляГражданина.Вопросы КАК Вопросы,
		               |	ВопросыДляГражданина.Ответы КАК Ответы,
		               |	ДанныеОбАдресе.Строение КАК Строение
		               |ИЗ
		               |	Справочник.ДанныеОГражданине КАК ДанныеОГражданине
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе
		               |		ПО ДанныеОГражданине.Код_СправочникАдрес = ДанныеОбАдресе.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудник КАК Сотрудник
		               |		ПО ДанныеОГражданине.Код_СправочникаСотрудник = Сотрудник.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВопросыДляГражданина КАК ВопросыДляГражданина
		               |		ПО ДанныеОГражданине.Код_СправочникаВопросы = ВопросыДляГражданина.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПерсональныеДанные КАК ПерсональныеДанные
		               |		ПО ДанныеОГражданине.Код_СправочникаПерсональныеДанные = ПерсональныеДанные.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОНациональность КАК ДанныеОНациональность
		               |		ПО ДанныеОГражданине.Код_СправочникаНациональности = ДанныеОНациональность.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСемье КАК ДанныеОСемье
		               |		ПО ДанныеОГражданине.Код_СправочникаДанныеСемьи = ДанныеОСемье.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОСтране КАК ДанныеОСтране
		               |		ПО ДанныеОГражданине.Код_СправочнниаДанныеОСтране = ДанныеОСтране.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоциальныеДанные КАК СоциальныеДанные
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеОРаботе КАК ДанныеОРаботе
		               |			ПО СоциальныеДанные.Код_СправочникаРабота = ДанныеОРаботе.Ссылка
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДанныеООбразовании КАК ДанныеООбразовании
		               |			ПО СоциальныеДанные.Код_СправочникаОбразование = ДанныеООбразовании.Ссылка
		               |		ПО ДанныеОГражданине.Код_СправочникаСоциальныеДанные = СоциальныеДанные.Ссылка
		               |ГДЕ
		               |	ДанныеОбАдресе.Область = &ВыборОбласти";
	Запрос.УстановитьПараметр("ВыборОбласти",ВыборОбласти);
	Результат = Запрос.Выполнить().Выбрать();
	Количество = Запрос.Выполнить().Выбрать().Количество();
	Текст = Новый ЗаписьТекста("C:\Users\Public\Documents\vigruz.txt", КодировкаТекста.ANSI);
	РезультатДок = Запрос.Выполнить().Выбрать();	
Пока РезультатДок.Следующий() Цикл		
	Текст.ЗаписатьСтроку(Строка(РезультатДок.ФИО)+","+Строка(РезультатДок.Пол)+","+Строка(РезультатДок.Возраст)
	+","+Строка(РезультатДок.БрачныйСтатус)+","+Строка(РезультатДок.Логин)+","+Строка(РезультатДок.Пароль)
	+","+Строка(РезультатДок.Роль)+","+Строка(РезультатДок.СоциальныйСтатус)+","+Строка(РезультатДок.УровеньГрамотности)
	+","+Строка(РезультатДок.УровеньОбразования)+","+Строка(РезультатДок.ОбразовательныеУчреждения)
	+","+Строка(РезультатДок.СтатусЭкономическойАктичности)+","+Строка(РезультатДок.РодЗанятий)+","+Строка(РезультатДок.Работа)
	+","+Строка(РезультатДок.СтатусВозможнойРаботоспособности)+","+Строка(РезультатДок.СтранаРождения)+","+Строка(РезультатДок.ДатаМиграции)
	+","+Строка(РезультатДок.Гражданство)+","+Строка(РезультатДок.ЧленСемьи)+","+Строка(РезультатДок.СтатусЧленаСемьи)
	+","+Строка(РезультатДок.Отношение)+","+Строка(РезультатДок.СтепеньРодства)+","+Строка(РезультатДок.Национальность)
	+","+Строка(РезультатДок.ПервыйЯзык)+","+Строка(РезультатДок.Религия)+","+Строка(РезультатДок.ДругиеЯзыки)
	+","+Строка(РезультатДок.Область)+","+Строка(РезультатДок.Регион)+","+Строка(РезультатДок.НаселенныйПункт)
	+","+Строка(РезультатДок.Улица)+","+Строка(РезультатДок.Дом)+","+Строка(РезультатДок.Строение)
	+","+Строка(РезультатДок.Вопросы)+","+Строка(РезультатДок.Ответы));	
КонецЦикла;		
Текст.Закрыть();
СтатусВыгрузки = "Выгрузка завершена. Количество записей: " + Количество;
ДокументВыгрузки = Документы.ВыгрузкаДанных.СоздатьДокумент();
ДокументВыгрузки.Дата = ТекущаяДата();
ДокументВыгрузки.ИмяДокумента = "Выгрузка по " + ВыборОбласти;
ДокументВыгрузки.Выгрузил = Логин;
ДокументВыгрузки.КоличествоЗаписей = Количество;
ДокументВыгрузки.Записать();
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФИОСотрудника = Параметры.ФИО;
	Логин = Параметры.Логин;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОбАдресе.Область КАК Область
	               |ИЗ
	               |	Справочник.ДанныеОбАдресе КАК ДанныеОбАдресе";
	Результат = Запрос.Выполнить();
	Элементы.ВыборОбласти.СписокВыбора.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Область"));
	ВыборОбласти = Элементы.ВыборОбласти.СписокВыбора[0].Значение;
КонецПроцедуры

&НаКлиенте
Процедура Меню(Команда)
	Значение = ПроверкаМеню();
	ПараметрыЛогин = Новый Структура("Логин",Логин);
	Если Значение = 0 Тогда
		ОткрытьФорму("ОбщаяФорма.МенюСотрудника",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	Иначе
		ОткрытьФорму("ОбщаяФорма.МенюАдмина",ПараметрыЛогин);
		Закрыть(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПроверкаМеню()
	Пользователь = Справочники.Сотрудник.НайтиПоНаименованию(Логин).Роль;
	Если Пользователь = Ложь Тогда
		Возврат 0;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Выход(Команда)
	Перем ЗакрытиеОкна;
	Попытка
	 ЗакрытиеОкон = ПолучитьОкна();
	Для Каждого Элемент Из ЗакрытиеОкон Цикл
    	Если Не Элемент.Основное Тогда
        	Форма = Элемент.ПолучитьСодержимое();
        	Форма.Закрыть();
    	КонецЕсли;
	КонецЦикла;
	Исключение
	КонецПопытки;
КонецПроцедуры

